{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["TagsTemplate","render","siteTitle","this","props","data","site","siteMetadata","title","siteDescription","description","tag","pageContext","allMarkdownRemark","edges","totalCount","tagHeader","location","htmlAttributes","lang","meta","name","content","map","node","slug","fields","frontmatter","key","to","React","Component","pageQuery"],"mappings":"sNAOMA,E,gLACJC,OAAA,WACE,IAAMC,EAAYC,KAAKC,MAAMC,KAAKC,KAAKC,aAAaC,MAC9CC,EAAkBN,KAAKC,MAAMC,KAAKC,KAAKC,aAAaG,YAClDC,EAAQR,KAAKC,MAAMQ,YAAnBD,IAHD,EAIuBR,KAAKC,MAAMC,KAAKQ,kBAAtCC,EAJD,EAICA,MAAOC,EAJR,EAIQA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,gBAECJ,EAFD,IAIf,OACE,kBAAC,IAAD,CAAQM,SAAUd,KAAKC,MAAMa,UAC3B,kBAAC,IAAD,CACEC,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASb,IACvCD,MAAUG,EAAL,MAAcT,IAErB,4BAAKc,GACL,4BACGF,EAAMS,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAjB,EAAUgB,EAAKG,YAAfnB,MACR,OACE,wBAAIoB,IAAKH,GACP,kBAAC,OAAD,CAAMI,GAAIJ,GAAOjB,QASzB,kBAAC,OAAD,CAAMqB,GAAG,SAAT,oB,GAjCmBC,IAAMC,WAuClB/B,YAER,IAAMgC,EAAS","file":"component---src-templates-tags-js-7c7257fe3f3788fa7751.js","sourcesContent":["import React from \"react\";\nimport Helmet from 'react-helmet'\nimport { graphql, Link } from 'gatsby'\n\n// Components\nimport Layout from '../components/layout'\n\nclass TagsTemplate extends React.Component {\n  render() {\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const siteDescription = this.props.data.site.siteMetadata.description;\n    const { tag } = this.props.pageContext;\n    const { edges, totalCount } = this.props.data.allMarkdownRemark;\n    const tagHeader = `${totalCount} post${\n      totalCount === 1 ? \"\" : \"s\"\n    } con el tag \"${tag}\"`;\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet\n          htmlAttributes={{ lang: 'es' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={`${tag} | ${siteTitle}`}\n        />\n        <h1>{tagHeader}</h1>\n        <ul>\n          {edges.map(({ node }) => {\n            const { slug } = node.fields;\n            const { title } = node.frontmatter;\n            return (\n              <li key={slug}>\n                <Link to={slug}>{title}</Link>\n              </li>\n            );\n          })}\n        </ul>\n        {/*\n          This links to a page that does not yet exist.\n          We'll come back to it!\n        */}\n        <Link to=\"/tags\">Todos los tags</Link>\n      </Layout>\n    );\n  }\n}\n\nexport default TagsTemplate;\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}